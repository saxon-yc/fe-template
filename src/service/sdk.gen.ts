// This file is auto-generated by @hey-api/openapi-ts

import type { Client, Options as Options2, TDataShape } from './client'
import { client } from './client.gen'
import type { PostApiV1FileData, PostApiV1FileResponses } from './types.gen'

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = Options2<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>
}

/**
 * 文件上传
 *
 * 文件上传
 */
export const postApiV1File = <ThrowOnError extends boolean = false>(
  options: Options<PostApiV1FileData, ThrowOnError>
) => {
  return (options.client ?? client).post<
    PostApiV1FileResponses,
    unknown,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/api/v1/file',
    ...options,
    headers: {
      'Content-Type': 'application/json;charset=utf-8',
      ...options.headers,
    },
  })
}
